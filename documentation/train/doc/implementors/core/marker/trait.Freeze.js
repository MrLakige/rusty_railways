(function() {var implementors = {
"locomotive":[["impl Freeze for <a class=\"struct\" href=\"locomotive/train_hal/message_sender/struct.MessageSender.html\" title=\"struct locomotive::train_hal::message_sender::MessageSender\">MessageSender</a>",1,["locomotive::train_hal::message_sender::MessageSender"]],["impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"locomotive/train_hal/message_receiver/struct.MessageReceiver.html\" title=\"struct locomotive::train_hal::message_receiver::MessageReceiver\">MessageReceiver</a>&lt;'a, T&gt;",1,["locomotive::train_hal::message_receiver::MessageReceiver"]],["impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"locomotive/train_hal/nfc_reader/struct.NfcReader.html\" title=\"struct locomotive::train_hal::nfc_reader::NfcReader\">NfcReader</a>&lt;'a&gt;",1,["locomotive::train_hal::nfc_reader::NfcReader"]],["impl Freeze for <a class=\"enum\" href=\"locomotive/train_hal/speed_setter/enum.Direction.html\" title=\"enum locomotive::train_hal::speed_setter::Direction\">Direction</a>",1,["locomotive::train_hal::speed_setter::Direction"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"locomotive/train_hal/speed_setter/struct.MotorDriver.html\" title=\"struct locomotive::train_hal::speed_setter::MotorDriver\">MotorDriver</a>&lt;'a&gt;",1,["locomotive::train_hal::speed_setter::MotorDriver"]],["impl Freeze for <a class=\"struct\" href=\"locomotive/train_hal/wifi_configuration/struct.WiFiManager.html\" title=\"struct locomotive::train_hal::wifi_configuration::WiFiManager\">WiFiManager</a>",1,["locomotive::train_hal::wifi_configuration::WiFiManager"]],["impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"locomotive/train_hal/struct.EspController.html\" title=\"struct locomotive::train_hal::EspController\">EspController</a>&lt;'a&gt;",1,["locomotive::train_hal::EspController"]],["impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"locomotive/train_hal/struct.EspTrainHal.html\" title=\"struct locomotive::train_hal::EspTrainHal\">EspTrainHal</a>&lt;'a&gt;",1,["locomotive::train_hal::EspTrainHal"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()